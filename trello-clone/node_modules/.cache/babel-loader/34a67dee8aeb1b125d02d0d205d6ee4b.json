{"ast":null,"code":"import _slicedToArray from \"/home/vittor/Projects/trello-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/vittor/Projects/trello-clone/src/components/home/home.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport List from './list';\nimport Board from './board';\nimport axios from 'axios';\nconst MainContent = styled.section`\n  background-color: white;  \n  grid-area: content;\n  display: grid;\n  grid-template-columns: 2fr 8fr;\n  column-gap: 40px;\n  grid-template-areas: \"leftContent rightContent\";\n  padding: 10px 150px;\n`;\nconst LeftContent = styled.div`    \n    grid-area: leftContent;    \n`;\nconst RightContent = styled.div`\n    grid-area: rightContent;\n    display: flex;\n    flex-wrap: nowrap;\n    width: 100%;\n`;\n\nconst Home = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        boards = _useState2[0],\n        setBoards = _useState2[1];\n\n  useEffect(() => {\n    axios.get('http://localhost:4000/boards').then(response => setBoards(response.data));\n  }, []);\n  return React.createElement(MainContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(LeftContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(RightContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, boards.length > 0 && boards.map((item, i) => React.createElement(Board, {\n    key: i,\n    board: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/home/vittor/Projects/trello-clone/src/components/home/home.js"],"names":["React","useState","useEffect","styled","List","Board","axios","MainContent","section","LeftContent","div","RightContent","Home","props","boards","setBoards","get","then","response","data","length","map","item","i"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,WAAW,GAAGJ,MAAM,CAACK,OAAQ;;;;;;;;CAAnC;AAUA,MAAMC,WAAW,GAAGN,MAAM,CAACO,GAAI;;CAA/B;AAIA,MAAMC,YAAY,GAAGR,MAAM,CAACO,GAAI;;;;;CAAhC;;AAOA,MAAME,IAAI,GAAIC,KAAD,IAAW;AAAA,oBAEQZ,QAAQ,CAAC,EAAD,CAFhB;AAAA;AAAA,QAEba,MAFa;AAAA,QAELC,SAFK;;AAIpBb,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAACU,GAAN,CAAU,8BAAV,EAA0CC,IAA1C,CAAgDC,QAAD,IAAcH,SAAS,CAACG,QAAQ,CAACC,IAAV,CAAtE;AACH,GAFQ,EAEN,EAFM,CAAT;AAKA,SACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQL,MAAM,CAACM,MAAP,GAAgB,CAAhB,IAAqBN,MAAM,CAACO,GAAP,CAAW,CAACC,IAAD,EAAOC,CAAP,KAAa,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEA,CAAZ;AAAe,IAAA,KAAK,EAAED,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CAF7B,CAJJ,CADJ;AAYH,CArBD;;AAuBA,eAAeV,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport List from './list'\nimport Board from './board'\nimport axios from 'axios'\n\nconst MainContent = styled.section`\n  background-color: white;  \n  grid-area: content;\n  display: grid;\n  grid-template-columns: 2fr 8fr;\n  column-gap: 40px;\n  grid-template-areas: \"leftContent rightContent\";\n  padding: 10px 150px;\n`\n\nconst LeftContent = styled.div`    \n    grid-area: leftContent;    \n`\n\nconst RightContent = styled.div`\n    grid-area: rightContent;\n    display: flex;\n    flex-wrap: nowrap;\n    width: 100%;\n`\n\nconst Home = (props) => {\n\n    const [boards, setBoards] = useState([])\n\n    useEffect(() => {\n        axios.get('http://localhost:4000/boards').then((response) => setBoards(response.data))     \n    }, [])\n\n\n    return (\n        <MainContent>\n            <LeftContent>\n                <List></List>\n            </LeftContent>\n            <RightContent>\n                {\n                    boards.length > 0 && boards.map((item, i) => <Board key={i} board={item} />)\n                }\n            </RightContent>\n        </MainContent>\n    )\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}