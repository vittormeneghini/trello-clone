{"ast":null,"code":"import _objectSpread from \"/home/vittor/Projects/trello-clone/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/vittor/Projects/trello-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/vittor/Projects/trello-clone/src/components/board/list.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Card from './card';\nimport Axios from 'axios';\nimport { useToasts } from 'react-toast-notifications';\nconst Main = styled.div`\n    border-radius: 3px;\n    background-color: #EBECF0;\n    display: flex;\n    flex-wrap: wrap;\n    max-width: 250px;\n    margin-left: 1%;\n`;\nconst Title = styled.input`\n    width: 100%;\n    background-color: transparent;\n    border: none;\n    padding: 5px;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    margin-right: 10px;\n    &:focus{\n        background-color: white;\n        border-radius: 3px;\n    }\n`;\nconst FooterHeader = styled.div`\n    display: flex;\n    align-items: center;\n    padding: 5px;\n    width: 100%;\n    .fa-trash{\n        &:hover{\n            cursor: pointer;\n        }\n    }\n`;\nconst ButtonFlex = styled.button`\n    display: flex;\n    align-items: center;\n    padding: 5px;\n    border: none;\n    width: 100%;\n    background-color: transparent;\n    &:hover{\n        background-color: rgb(217, 219, 226);\n        border-radius: 2px;\n        cursor: pointer;\n    }\n    i{\n        color: #717D92;\n    }\n    p{\n        font-size: 1em;\n        margin-left: 5px;\n        color: #717D92;\n    }\n`;\nconst Content = styled.div`\n    display: flex;\n    height: auto;\n    padding: 5px;\n    width: 100%;\n    flex-wrap: wrap;\n`;\nconst InputCreatingCard = styled.input`\n    margin: 2%;\n    border: none;\n    background-color: white;\n    width: 100%;\n    height: 50px;\n    padding: 5px;\n    border-radius: 5px;\n    &:focus{\n        border-bottom: 1px solid blue;\n    }\n`;\n\nconst List = props => {\n  const _useState = useState(props.board),\n        _useState2 = _slicedToArray(_useState, 2),\n        board = _useState2[0],\n        setBoard = _useState2[1];\n\n  const _useState3 = useState(props.list),\n        _useState4 = _slicedToArray(_useState3, 2),\n        list = _useState4[0],\n        setList = _useState4[1];\n\n  const _useToasts = useToasts(),\n        addToast = _useToasts.addToast;\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        cards = _useState6[0],\n        setCards = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isCreatingCard = _useState8[0],\n        setIsCreatingCard = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        cardName = _useState10[0],\n        setCardName = _useState10[1];\n\n  useEffect(() => {\n    Axios.get(`http://localhost:4000/cards/list/${list._id}`).then(response => {\n      setCards(response.data);\n    });\n  }, []);\n\n  function handleName(e) {\n    setList(_objectSpread({}, list, {\n      name: e.target.value\n    }));\n  }\n\n  function saveName() {\n    Axios.put(`http://localhost:4000/lists/${list._id}`, list);\n  }\n\n  function deleteList() {\n    Axios.delete(`http://localhost:4000/lists/${list._id}`).then(function ({\n      status\n    }) {\n      if (status === 200) {\n        props.onDelete(list._id);\n        addToast('Lista excluida com sucesso', {\n          appearance: 'success',\n          autoDismiss: true\n        });\n      }\n    });\n  }\n\n  function setCreatingCard() {\n    setIsCreatingCard(!isCreatingCard);\n  }\n\n  function handleCardName(e) {\n    setCardName(e.target.value);\n  }\n\n  function saveCard(e) {\n    let obj = {\n      listId: list._id,\n      name: cardName\n    };\n    console.log(obj);\n\n    if (e.key === 'Enter') {\n      Axios.post(`http://localhost:4000/cards/list/${list._id}`, obj).then(response => {\n        setCards([...cards, response.data]);\n        addToast(`CartÃ£o criado com sucesso na lista ${list.name}`, {\n          autoDismiss: true,\n          appearance: 'success'\n        });\n        setCreatingCard();\n      });\n    }\n  }\n\n  return React.createElement(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(FooterHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(Title, {\n    value: list.name,\n    type: \"text\",\n    onChange: handleName,\n    onBlur: saveName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }), React.createElement(\"i\", {\n    className: \"fa fa-trash\",\n    onClick: deleteList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  })), React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, cards.map((item, i) => React.createElement(Card, {\n    key: i,\n    card: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }))), React.createElement(FooterHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(ButtonFlex, {\n    onClick: setCreatingCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-plus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Adicionar outro cart\\xE3o\"))), isCreatingCard && React.createElement(InputCreatingCard, {\n    placeholder: \"Digite o nome do seu cart\\xE3o\",\n    onKeyDown: saveCard,\n    onChange: handleCardName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }));\n};\n\nexport default List;","map":{"version":3,"sources":["/home/vittor/Projects/trello-clone/src/components/board/list.js"],"names":["React","useState","useEffect","styled","Card","Axios","useToasts","Main","div","Title","input","FooterHeader","ButtonFlex","button","Content","InputCreatingCard","List","props","board","setBoard","list","setList","addToast","cards","setCards","isCreatingCard","setIsCreatingCard","cardName","setCardName","get","_id","then","response","data","handleName","e","name","target","value","saveName","put","deleteList","delete","status","onDelete","appearance","autoDismiss","setCreatingCard","handleCardName","saveCard","obj","listId","console","log","key","post","map","item","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport Card from './card'\nimport Axios from 'axios'\nimport { useToasts } from 'react-toast-notifications'\n\n\nconst Main = styled.div`\n    border-radius: 3px;\n    background-color: #EBECF0;\n    display: flex;\n    flex-wrap: wrap;\n    max-width: 250px;\n    margin-left: 1%;\n`\n\nconst Title = styled.input`\n    width: 100%;\n    background-color: transparent;\n    border: none;\n    padding: 5px;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    margin-right: 10px;\n    &:focus{\n        background-color: white;\n        border-radius: 3px;\n    }\n`\n\nconst FooterHeader = styled.div`\n    display: flex;\n    align-items: center;\n    padding: 5px;\n    width: 100%;\n    .fa-trash{\n        &:hover{\n            cursor: pointer;\n        }\n    }\n`\n\nconst ButtonFlex = styled.button`\n    display: flex;\n    align-items: center;\n    padding: 5px;\n    border: none;\n    width: 100%;\n    background-color: transparent;\n    &:hover{\n        background-color: rgb(217, 219, 226);\n        border-radius: 2px;\n        cursor: pointer;\n    }\n    i{\n        color: #717D92;\n    }\n    p{\n        font-size: 1em;\n        margin-left: 5px;\n        color: #717D92;\n    }\n`\n\nconst Content = styled.div`\n    display: flex;\n    height: auto;\n    padding: 5px;\n    width: 100%;\n    flex-wrap: wrap;\n`\n\nconst InputCreatingCard = styled.input`\n    margin: 2%;\n    border: none;\n    background-color: white;\n    width: 100%;\n    height: 50px;\n    padding: 5px;\n    border-radius: 5px;\n    &:focus{\n        border-bottom: 1px solid blue;\n    }\n`\n\nconst List = (props) => {\n\n    const [board, setBoard] = useState(props.board)\n    const [list, setList] = useState(props.list)\n    const { addToast } = useToasts()\n    const [cards, setCards] = useState([])\n    const [isCreatingCard, setIsCreatingCard] = useState(false)\n    const [cardName, setCardName] = useState('')\n\n    useEffect(() => {\n        Axios.get(`http://localhost:4000/cards/list/${list._id}`).then((response) => {\n            setCards(response.data)\n        })\n    }, [])\n\n    function handleName(e) {\n        setList({ ...list, name: e.target.value })\n    }\n\n    function saveName() {\n        Axios.put(`http://localhost:4000/lists/${list._id}`, list)\n    }\n\n    function deleteList() {\n        Axios.delete(`http://localhost:4000/lists/${list._id}`).then(function ({ status }) {\n            if (status === 200) {\n                props.onDelete(list._id)\n                addToast('Lista excluida com sucesso', {\n                    appearance: 'success',\n                    autoDismiss: true\n                })\n            }\n        })\n    }\n\n    function setCreatingCard() {\n        setIsCreatingCard(!isCreatingCard)\n    }\n\n    function handleCardName(e) {\n        setCardName(e.target.value)\n    }\n\n    function saveCard(e) {\n        let obj = {\n            listId: list._id,\n            name: cardName\n        }\n        console.log(obj)\n        if (e.key === 'Enter') {\n            Axios.post(`http://localhost:4000/cards/list/${list._id}`, obj).then((response) => \n            { \n                setCards([...cards, response.data])\n                addToast(`CartÃ£o criado com sucesso na lista ${list.name}`, { autoDismiss: true, appearance: 'success' })\n                setCreatingCard()\n            })\n        }\n    }\n\n    return (\n        <Main>\n            <FooterHeader>\n                <Title value={list.name} type=\"text\" onChange={handleName} onBlur={saveName}></Title>\n                <i className=\"fa fa-trash\" onClick={deleteList}></i>\n            </FooterHeader>\n            <Content>\n                {cards.map((item, i) => <Card key={i} card={item} />)}\n            </Content>\n            <FooterHeader>\n                <ButtonFlex onClick={setCreatingCard}>\n                    <i className=\"fa fa-plus\"></i>\n                    <p>Adicionar outro cartÃ£o</p>\n                </ButtonFlex>\n            </FooterHeader>\n            {\n                isCreatingCard && <InputCreatingCard placeholder=\"Digite o nome do seu cartÃ£o\" onKeyDown={saveCard} onChange={handleCardName}></InputCreatingCard>\n            }\n        </Main>\n    )\n}\n\n\nexport default List"]},"metadata":{},"sourceType":"module"}