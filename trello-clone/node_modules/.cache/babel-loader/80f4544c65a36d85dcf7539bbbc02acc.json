{"ast":null,"code":"import _objectSpread from \"/home/vittor/Projects/trello-clone/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/vittor/Projects/trello-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/vittor/Projects/trello-clone/src/components/board/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport List from './list';\nconst Main = styled.div`\n    grid-area: content;\n    display: grid;\n    grid-template-rows: 6vh 85vh;\n    background-image: url(\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/480x320/c48e502274322eb1bf5dfada1bbfeda0/photo-1560037962-08931d95007f.jpg\");\n    background-repeat: no-repeat;\n    background-size: cover;\n`;\nconst SubNav = styled.div`\n    height: 100%;\n    width: 100%;\n    padding: 5px;\n    display: flex;\n    align-items: center;\n    i{\n        color: white;\n        font-size: 1.6em;\n        margin-left: 11px;\n        &:hover{\n            cursor: pointer;\n        }\n    }\n    .isFavorite{\n        color: #f1c40f;\n    }\n    border-bottom: 1px solid white;\n    opacity: 0.2;\n    background-color: black;\n    z-index: 10;\n`;\nconst SubContent = styled.div`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    align-items: baseline;\n    margin-top: 2%;\n    padding: 0px 10px;\n    overflow-x: auto;\n`;\nconst BoardName = styled.p`\n    color: white;\n    font-weight: bold;\n    font-size: 1em;\n    padding: 5px;\n`;\nconst CreateListButton = styled.button`\n    background-color: transparent;\n    color: white;\n    font-weight: bold;\n    font-size: 1.0em;\n    border: 1px solid white;\n    border-radius: 3px;\n    padding: 5px;\n    margin-left: 10px;\n    &:hover{\n        cursor: pointer;\n    }\n`;\nconst InputCreateList = styled.input`\n    margin-left: 5px;\n    border-radius: 5px;\n    padding: 5px;\n    &:focus{\n        border-bottom: 1px solid blue;\n    }\n`;\n\nconst Board = () => {\n  const _useParams = useParams(),\n        id = _useParams.id;\n\n  const _useState = useState({\n    name: '',\n    favorite: false,\n    _id: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        board = _useState2[0],\n        setBoard = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lists = _useState4[0],\n        setLists = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        listName = _useState6[0],\n        setListName = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isCreatingList = _useState8[0],\n        setIsCreatingList = _useState8[1];\n\n  useEffect(() => {\n    axios.get(`http://localhost:4000/boards/${id}`).then(response => setBoard(response.data));\n    axios.get(`http://localhost:4000/lists/board/${id}`).then(response => setLists(response.data));\n  }, []);\n\n  function onFavorite() {\n    let newObj = _objectSpread({}, board, {\n      favorite: !board.favorite\n    });\n\n    axios.put(`http://localhost:4000/boards/${board._id}`, newObj).then(result => setBoard(newObj));\n  }\n\n  function createList(e) {\n    if (e.key === 'Enter') {\n      let obj = {\n        name: listName,\n        position: 0,\n        boardId: board._id\n      };\n      axios.post(`http://localhost:4000/lists/board/${board._id}`, obj).then(list => setLists(...lists, obj));\n    }\n  }\n\n  function renderCreatingList() {\n    setIsCreatingList(!isCreatingList);\n  }\n\n  function handleNameList(e) {\n    setListName(e.target.value);\n  }\n\n  return React.createElement(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(SubNav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(BoardName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, board.name), board.favorite ? React.createElement(\"i\", {\n    className: \"fa fa-star isFavorite\",\n    onClick: onFavorite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }) : React.createElement(\"i\", {\n    className: \"fa fa-star\",\n    onClick: onFavorite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })), React.createElement(SubContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, lists.map(item => React.createElement(List, {\n    board: board,\n    list: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })), React.createElement(CreateListButton, {\n    onClick: renderCreatingList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Criar nova lista\"), isCreatingList && React.createElement(InputCreateList, {\n    type: \"text\",\n    placeholder: \"Digite o nome da sua lista\",\n    onChange: handleNameList,\n    onKeyDown: createList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })));\n};\n\nexport default Board;","map":{"version":3,"sources":["/home/vittor/Projects/trello-clone/src/components/board/index.js"],"names":["React","useEffect","useState","useParams","styled","axios","List","Main","div","SubNav","SubContent","BoardName","p","CreateListButton","button","InputCreateList","input","Board","id","name","favorite","_id","board","setBoard","lists","setLists","listName","setListName","isCreatingList","setIsCreatingList","get","then","response","data","onFavorite","newObj","put","result","createList","e","key","obj","position","boardId","post","list","renderCreatingList","handleNameList","target","value","map","item"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {useParams} from 'react-router-dom'\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport List from './list'\n\nconst Main = styled.div`\n    grid-area: content;\n    display: grid;\n    grid-template-rows: 6vh 85vh;\n    background-image: url(\"https://trello-backgrounds.s3.amazonaws.com/SharedBackground/480x320/c48e502274322eb1bf5dfada1bbfeda0/photo-1560037962-08931d95007f.jpg\");\n    background-repeat: no-repeat;\n    background-size: cover;\n`\n\nconst SubNav = styled.div`\n    height: 100%;\n    width: 100%;\n    padding: 5px;\n    display: flex;\n    align-items: center;\n    i{\n        color: white;\n        font-size: 1.6em;\n        margin-left: 11px;\n        &:hover{\n            cursor: pointer;\n        }\n    }\n    .isFavorite{\n        color: #f1c40f;\n    }\n    border-bottom: 1px solid white;\n    opacity: 0.2;\n    background-color: black;\n    z-index: 10;\n`\nconst SubContent = styled.div`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    align-items: baseline;\n    margin-top: 2%;\n    padding: 0px 10px;\n    overflow-x: auto;\n`\n\nconst BoardName = styled.p`\n    color: white;\n    font-weight: bold;\n    font-size: 1em;\n    padding: 5px;\n`\nconst CreateListButton = styled.button`\n    background-color: transparent;\n    color: white;\n    font-weight: bold;\n    font-size: 1.0em;\n    border: 1px solid white;\n    border-radius: 3px;\n    padding: 5px;\n    margin-left: 10px;\n    &:hover{\n        cursor: pointer;\n    }\n`\n\nconst InputCreateList = styled.input`\n    margin-left: 5px;\n    border-radius: 5px;\n    padding: 5px;\n    &:focus{\n        border-bottom: 1px solid blue;\n    }\n`\n\nconst Board = () => {\n\n    const {id} = useParams()\n\n    const [board, setBoard] = useState({name: '', favorite: false, _id: ''})\n    const [lists, setLists] = useState([])\n    const [listName, setListName] = useState('')\n    const [isCreatingList, setIsCreatingList] = useState(false)\n\n    useEffect(() => {\n        axios.get(`http://localhost:4000/boards/${id}`).then((response) => setBoard(response.data))\n        axios.get(`http://localhost:4000/lists/board/${id}`).then((response) => setLists(response.data))\n    }, [])\n\n    function onFavorite(){\n        let newObj = { ...board, favorite: !board.favorite }\n        axios.put(`http://localhost:4000/boards/${board._id}`, newObj).then((result) => setBoard(newObj)) \n    }\n\n    function createList(e){\n        if(e.key === 'Enter'){\n            let obj = {\n                name: listName,\n                position: 0,\n                boardId: board._id\n            }\n    \n            axios.post(`http://localhost:4000/lists/board/${board._id}`, obj).then((list) => setLists(...lists, obj))\n        }\n    }\n\n    function renderCreatingList() {\n        setIsCreatingList(!isCreatingList)\n    }\n\n    function handleNameList(e){\n        setListName(e.target.value)\n    }\n\n    return(\n        <Main>\n            <SubNav>\n                <BoardName>{board.name}</BoardName>\n                {board.favorite ? <i className=\"fa fa-star isFavorite\" onClick={onFavorite}></i> : <i className=\"fa fa-star\" onClick={onFavorite}></i>}\n            </SubNav>\n            <SubContent>\n                {\n                    lists.map((item) => <List board={board} list={item} />)\n                }\n                <CreateListButton onClick={renderCreatingList}>Criar nova lista</CreateListButton> \n                {\n                    isCreatingList && <InputCreateList type=\"text\" placeholder=\"Digite o nome da sua lista\"  onChange={handleNameList} onKeyDown={createList}></InputCreateList>\n                }\n            </SubContent>\n        </Main>\n    )\n}\n\nexport default Board"]},"metadata":{},"sourceType":"module"}